// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id           Int     @id @unique
  id_role      Int
  name         String? //Puede ser nulo
  phone        Int     @unique
  email        String  @unique
  password     String
  company_name String?

  payment_methods payment_method[]
  adress          adress[]
  products        product[]
  comments        comment[]
  transactions    transaction_header[]
  role            role                 @relation(fields: [id_role], references: [id])
}

model role {
  id          Int    @id @default(autoincrement())
  description String

  users user[]
}

model adress {
  id          Int    @id @default(autoincrement())
  id_user     Int
  province    String
  canton      String
  district    String
  direction   String
  postal_code String
  phone       Int    @unique

  transactions transaction_header[]
  user         user                 @relation(fields: [id_user], references: [id])
}

model payment_method {
  id              Int      @id @default(autoincrement())
  id_user         Int
  type            String
  provider        String
  account_number  String   @unique
  expiration_date DateTime

  transactions transaction_header[]
  user         user                 @relation(fields: [id_user], references: [id])
}

model transaction_header {
  id                Int      @id @default(autoincrement())
  id_user           Int
  id_payment_method Int
  id_adress         Int
  total             Decimal
  created_at        DateTime
  state             String

  transactions   transaction_detail[]
  user           user                 @relation(fields: [id_user], references: [id])
  payment_method payment_method       @relation(fields: [id_payment_method], references: [id])
  adress         adress               @relation(fields: [id_adress], references: [id])
}

model transaction_detail {
  id         Int     @id @default(autoincrement())
  id_header  Int
  id_product Int
  quantity   Int
  subtotal   Decimal

  client_rating   String?
  seller_rating   String?
  client_feedback String?
  seller_feedback String?

  header  transaction_header @relation(fields: [id_header], references: [id])
  product product            @relation(fields: [id_product], references: [id])
}

model type {
  id          Int       @id @default(autoincrement())
  description String
  products    product[]
}

model product {
  id       Int    @id @default(autoincrement())
  id_user  Int
  id_type  Int
  name     String
  quantity Int
  state    String

  transactions transaction_detail[]
  type         type                 @relation(fields: [id_type], references: [id])
  user         user                 @relation(fields: [id_user], references: [id])
  categories   category[]
  images       image[]
  comments     comment[]
}

model category {
  id          Int       @id @default(autoincrement())
  description String
  products    product[]
}

model image {
  id         Int     @id @default(autoincrement())
  id_product Int
  image      Bytes
  product    product @relation(fields: [id_product], references: [id])
}

model comment {
  id         Int      @id @default(autoincrement())
  id_product Int
  id_user    Int
  text       String
  created_at DateTime

  answers answer[]
  user    user     @relation(fields: [id_user], references: [id])
  product product  @relation(fields: [id_product], references: [id])
}

model answer {
  id         Int      @id @default(autoincrement())
  id_comment Int
  text       String
  created_at DateTime

  comment comment @relation(fields: [id_comment], references: [id])
}
